apply plugin: 'java'
apply plugin: 'idea'
apply from: 'external-dependencies.gradle'
apply from: 'idea-config.gradle'

task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}

group 'loader'

repositories {
    mavenCentral()
}

//noinspection GroovyAssignabilityCheck
dependencies {
    compile jackson_csv, jcabi, guava, jackson_dataformat_yaml

    testCompile junit, mockito
}

test {
    afterTest { desc, result ->
        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

jar.baseName = "loader"

jar {
    doFirst {
        from {
            configurations.compile.collect {
                it.isDirectory() ? it : zipTree(it)
            }
        }

        manifest {
            attributes(
                    "Main-Class": "uk.gov.admin.LoaderApplication",
                    "Class-Path": configurations.runtime.findAll { !it.directory }.collect { it.name }.join(' ')
            )
        }
    }
}

task bulkLoad(type: JavaExec) {
    def properties = project.getProperties()
    def dataSource = properties.get("datasource")
    def mintUrl = properties.get("minturl")
    def type = properties.get("type") == null ? "jsonl" : properties.get("type")

    main = 'uk.gov.admin.LoaderApplication'
    classpath = sourceSets.main.runtimeClasspath
    args = ["--datasource=$dataSource", "--minturl=$mintUrl", "--type=$type"]
    workingDir = System.getProperty("user.dir") // run the task from the user's cwd

    doFirst{
        if (dataSource == null || mintUrl == null) {
            throw new AssertionError("Missing required parameters -Pdatasource and -Pminturl.\n\nUsage: gradle bulkLoad -Pminturl=<minturl> -Pdatasource=<loadfile.json> [-Ptype=jsonl|tsv|csv|yaml|yaml_dir]")
        }
        if(!["jsonl", "tsv", "csv", "yaml", "yaml_dir"].contains(type)){
            throw new IllegalArgumentException("type: $type is not a valid.")
        }
    }
}
